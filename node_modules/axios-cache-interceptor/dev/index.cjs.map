{"version":3,"file":"dev/index.cjs","mappings":"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","sources":["webpack://axios-cache-interceptor/webpack/bootstrap","webpack://axios-cache-interceptor/webpack/runtime/define property getters","webpack://axios-cache-interceptor/webpack/runtime/hasOwnProperty shorthand","webpack://axios-cache-interceptor/webpack/runtime/make namespace object","webpack://axios-cache-interceptor/external commonjs2 \"cache-parser\"","webpack://axios-cache-interceptor/./src/header/headers.ts","webpack://axios-cache-interceptor/./src/header/interpreter.ts","webpack://axios-cache-interceptor/external commonjs2 \"fast-defer\"","webpack://axios-cache-interceptor/./src/interceptors/util.ts","webpack://axios-cache-interceptor/./src/interceptors/request.ts","webpack://axios-cache-interceptor/./src/util/cache-predicate.ts","webpack://axios-cache-interceptor/./src/util/update-cache.ts","webpack://axios-cache-interceptor/./src/interceptors/response.ts","webpack://axios-cache-interceptor/./src/storage/build.ts","webpack://axios-cache-interceptor/./src/storage/memory.ts","webpack://axios-cache-interceptor/external commonjs2 \"object-code\"","webpack://axios-cache-interceptor/./src/util/key-generator.ts","webpack://axios-cache-interceptor/./src/cache/create.ts","webpack://axios-cache-interceptor/./src/storage/web-api.ts","webpack://axios-cache-interceptor/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"cache-parser\");","export const Header = Object.freeze({\n    /**\n     * ```txt\n     * If-Modified-Since: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since\n     */\n    IfModifiedSince: 'if-modified-since',\n    /**\n     * ```txt\n     * Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified\n     */\n    LastModified: 'last-modified',\n    /**\n     * ```txt\n     * If-None-Match: \"<etag_value>\"\n     * If-None-Match: \"<etag_value>\", \"<etag_value>\", …\n     * If-None-Match: *\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match\n     */\n    IfNoneMatch: 'if-none-match',\n    /**\n     * ```txt\n     * Cache-Control: max-age=604800\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n     */\n    CacheControl: 'cache-control',\n    /**\n     * ```txt\n     * ETag: W / '<etag_value>';\n     * ETag: '<etag_value>';\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag\n     */\n    ETag: 'etag',\n    /**\n     * ```txt\n     * Expires: <http-date>\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires\n     */\n    Expires: 'expires',\n    /**\n     * ```txt\n     * Age: <delta-seconds>\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Age\n     */\n    Age: 'age',\n    /**\n     * Used internally as metadata to mark the cache item as revalidatable and enabling\n     * stale cache state Contains a string of ASCII characters that can be used as ETag for\n     * `If-Match` header Provided by user using `cache.etag` value.\n     *\n     * ```txt\n     * X-Axios-Cache-Etag: \"<etag_value>\"\n     * ```\n     */\n    XAxiosCacheEtag: 'x-axios-cache-etag',\n    /**\n     * Used internally as metadata to mark the cache item as revalidatable and enabling\n     * stale cache state may contain `'use-cache-timestamp'` if `cache.modifiedSince` is\n     * `true`, otherwise will contain a date from `cache.modifiedSince`. If a date is\n     * provided, it can be used for `If-Modified-Since` header, otherwise the cache\n     * timestamp can be used for `If-Modified-Since` header.\n     *\n     * ```txt\n     * X-Axios-Cache-Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * X-Axios-Cache-Last-Modified: use-cache-timestamp\n     * ```\n     */\n    XAxiosCacheLastModified: 'x-axios-cache-last-modified',\n    /**\n     * Used internally as metadata to mark the cache item able to be used if the server\n     * returns an error. The stale-if-error response directive indicates that the cache can\n     * reuse a stale response when any error occurs.\n     *\n     * ```txt\n     * XAxiosCacheStaleIfError: <seconds>\n     * ```\n     */\n    XAxiosCacheStaleIfError: 'x-axios-cache-stale-if-error'\n});\n","import { parse } from 'cache-parser';\nimport { Header } from './headers';\nexport const defaultHeaderInterpreter = (headers) => {\n    if (!headers)\n        return 'not enough headers';\n    const cacheControl = headers[Header.CacheControl];\n    if (cacheControl) {\n        const { noCache, noStore, mustRevalidate, maxAge, immutable } = parse(String(cacheControl));\n        // Header told that this response should not be cached.\n        if (noCache || noStore) {\n            return 'dont cache';\n        }\n        if (immutable) {\n            // 1 year is sufficient, as Infinity may cause problems with certain storages.\n            // It might not be the best way, but a year is better than none.\n            return 1000 * 60 * 60 * 24 * 365;\n        }\n        // Already out of date, for cache can be saved, but must be requested again\n        if (mustRevalidate) {\n            return 0;\n        }\n        if (maxAge) {\n            const age = headers[Header.Age];\n            if (!age) {\n                return maxAge * 1000;\n            }\n            return (maxAge - Number(age)) * 1000;\n        }\n    }\n    const expires = headers[Header.Expires];\n    if (expires) {\n        const milliseconds = Date.parse(String(expires)) - Date.now();\n        return milliseconds >= 0 ? milliseconds : 'dont cache';\n    }\n    return 'not enough headers';\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fast-defer\");","import { Header } from '../header/headers';\n/**\n * Creates a new validateStatus function that will use the one already used and also\n * accept status code 304.\n */\nexport function createValidateStatus(oldValidate) {\n    return oldValidate\n        ? (status) => oldValidate(status) || status === 304\n        : (status) => (status >= 200 && status < 300) || status === 304;\n}\n/** Checks if the given method is in the methods array */\nexport function isMethodIn(requestMethod = 'get', methodList = []) {\n    requestMethod = requestMethod.toLowerCase();\n    for (const method of methodList) {\n        if (method.toLowerCase() === requestMethod) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * This function updates the cache when the request is stale. So, the next request to the\n * server will be made with proper header / settings.\n */\nexport function updateStaleRequest(cache, config) {\n    var _a;\n    config.headers || (config.headers = {});\n    const { etag, modifiedSince } = config.cache;\n    if (etag) {\n        const etagValue = etag === true ? (_a = cache.data) === null || _a === void 0 ? void 0 : _a.headers[Header.ETag] : etag;\n        if (etagValue) {\n            config.headers[Header.IfNoneMatch] = etagValue;\n        }\n    }\n    if (modifiedSince) {\n        config.headers[Header.IfModifiedSince] =\n            modifiedSince === true\n                ? // If last-modified is not present, use the createdAt timestamp\n                    cache.data.headers[Header.LastModified] ||\n                        new Date(cache.createdAt).toUTCString()\n                : modifiedSince.toUTCString();\n    }\n}\n/**\n * Creates the new date to the cache by the provided response. Also handles possible 304\n * Not Modified by updating response properties.\n */\nexport function createCacheResponse(response, cache) {\n    if (response.status === 304 && cache) {\n        // Set the cache information into the response object\n        response.cached = true;\n        response.data = cache.data;\n        response.status = cache.status;\n        response.statusText = cache.statusText;\n        // Update possible new headers\n        response.headers = Object.assign(Object.assign({}, cache.headers), response.headers);\n        // return the old cache\n        return cache;\n    }\n    // New Response\n    return {\n        data: response.data,\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers\n    };\n}\n","import { deferred } from 'fast-defer';\nimport { createValidateStatus, isMethodIn, updateStaleRequest } from './util';\nexport function defaultRequestInterceptor(axios) {\n    const onFulfilled = async (config) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        if (config.cache === false) {\n            if (__ACI_DEV__) {\n                (_a = axios.debug) === null || _a === void 0 ? void 0 : _a.call(axios, {\n                    msg: 'Ignoring cache because config.cache is false',\n                    data: config\n                });\n            }\n            return config;\n        }\n        // merge defaults with per request configuration\n        config.cache = Object.assign(Object.assign({}, axios.defaults.cache), config.cache);\n        if (!isMethodIn(config.method, config.cache.methods)) {\n            if (__ACI_DEV__) {\n                (_b = axios.debug) === null || _b === void 0 ? void 0 : _b.call(axios, {\n                    msg: `Ignored because method (${config.method}) is not in cache.methods (${config.cache.methods})`\n                });\n            }\n            return config;\n        }\n        const key = (config.id = axios.generateKey(config));\n        // Assumes that the storage handled staled responses\n        let cache = await axios.storage.get(key, config);\n        // Not cached, continue the request, and mark it as fetching\n        emptyOrStale: if (cache.state === 'empty' || cache.state === 'stale') {\n            /**\n             * This checks for simultaneous access to a new key. The js event loop jumps on the\n             * first await statement, so the second (asynchronous call) request may have already\n             * started executing.\n             */\n            if (axios.waiting[key]) {\n                cache = (await axios.storage.get(key, config));\n                /**\n                 * This check is required when a request has it own cache deleted manually, lets\n                 * say by a `axios.storage.delete(key)` and has a concurrent loading request.\n                 * Because in this case, the cache will be empty and may still has a pending key\n                 * on waiting map.\n                 */\n                //@ts-expect-error read above\n                if (cache.state !== 'empty') {\n                    if (__ACI_DEV__) {\n                        (_c = axios.debug) === null || _c === void 0 ? void 0 : _c.call(axios, {\n                            id: key,\n                            msg: 'Waiting list had an deferred for this key, waiting for it to finish'\n                        });\n                    }\n                    break emptyOrStale;\n                }\n            }\n            // Create a deferred to resolve other requests for the same key when it's completed\n            axios.waiting[key] = deferred();\n            /**\n             * Add a default reject handler to catch when the request is aborted without others\n             * waiting for it.\n             */\n            (_d = axios.waiting[key]) === null || _d === void 0 ? void 0 : _d.catch(() => undefined);\n            await axios.storage.set(key, {\n                state: 'loading',\n                previous: cache.state,\n                // Eslint complains a lot :)\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n                data: cache.data,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n                createdAt: cache.createdAt\n            }, config);\n            if (cache.state === 'stale') {\n                updateStaleRequest(cache, config);\n                if (__ACI_DEV__) {\n                    (_e = axios.debug) === null || _e === void 0 ? void 0 : _e.call(axios, {\n                        id: key,\n                        msg: 'Updated stale request'\n                    });\n                }\n            }\n            config.validateStatus = createValidateStatus(config.validateStatus);\n            if (__ACI_DEV__) {\n                (_f = axios.debug) === null || _f === void 0 ? void 0 : _f.call(axios, {\n                    id: key,\n                    msg: 'Sending request, waiting for response'\n                });\n            }\n            return config;\n        }\n        let cachedResponse;\n        if (cache.state === 'loading') {\n            const deferred = axios.waiting[key];\n            // Just in case, the deferred doesn't exists.\n            /* istanbul ignore if 'really hard to test' */\n            if (!deferred) {\n                await axios.storage.remove(key, config);\n                return config;\n            }\n            if (__ACI_DEV__) {\n                (_g = axios.debug) === null || _g === void 0 ? void 0 : _g.call(axios, {\n                    id: key,\n                    msg: 'Detected concurrent request, waiting for it to finish'\n                });\n            }\n            try {\n                cachedResponse = await deferred;\n            }\n            catch (err) {\n                if (__ACI_DEV__) {\n                    (_h = axios.debug) === null || _h === void 0 ? void 0 : _h.call(axios, {\n                        id: key,\n                        msg: 'Deferred rejected, requesting again',\n                        data: err\n                    });\n                }\n                // The deferred is rejected when the request that we are waiting rejected cache.\n                return config;\n            }\n        }\n        else {\n            cachedResponse = cache.data;\n        }\n        // Even though the response interceptor receives this one from here,\n        // it has been configured to ignore cached responses = true\n        config.adapter = () => Promise.resolve({\n            config,\n            data: cachedResponse.data,\n            headers: cachedResponse.headers,\n            status: cachedResponse.status,\n            statusText: cachedResponse.statusText,\n            cached: true,\n            id: key\n        });\n        if (__ACI_DEV__) {\n            (_j = axios.debug) === null || _j === void 0 ? void 0 : _j.call(axios, {\n                id: key,\n                msg: 'Returning cached response'\n            });\n        }\n        return config;\n    };\n    return {\n        onFulfilled,\n        apply: () => axios.interceptors.request.use(onFulfilled)\n    };\n}\n","/** Tests an response against a {@link CachePredicateObject}. */\nexport async function testCachePredicate(response, predicate) {\n    var _a;\n    if (typeof predicate === 'function') {\n        return predicate(response);\n    }\n    const { statusCheck, responseMatch, containsHeaders } = predicate;\n    if ((statusCheck && !(await statusCheck(response.status))) ||\n        (responseMatch && !(await responseMatch(response)))) {\n        return false;\n    }\n    if (containsHeaders) {\n        for (const header in containsHeaders) {\n            const predicate = containsHeaders[header];\n            if (predicate &&\n                !(await predicate(\n                // Axios uses lowercase headers, but if for some reason it doesn't, we should\n                // still be able to match.\n                (_a = response.headers[header.toLowerCase()]) !== null && _a !== void 0 ? _a : response.headers[header]))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","/** Function to update all caches, from CacheProperties.update, with the new data. */\nexport async function updateCache(storage, data, entries) {\n    for (const cacheKey in entries) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const updater = entries[cacheKey];\n        if (updater === 'delete') {\n            await storage.remove(cacheKey, data.config);\n            continue;\n        }\n        const value = await storage.get(cacheKey, data.config);\n        if (value.state === 'loading') {\n            continue;\n        }\n        const newValue = await updater(value, data);\n        if (newValue === 'delete') {\n            await storage.remove(cacheKey, data.config);\n            continue;\n        }\n        if (newValue !== 'ignore') {\n            await storage.set(cacheKey, newValue, data.config);\n        }\n    }\n}\n","import { Header } from '../header/headers';\nimport { testCachePredicate } from '../util/cache-predicate';\nimport { updateCache } from '../util/update-cache';\nimport { createCacheResponse } from './util';\nexport function defaultResponseInterceptor(axios) {\n    /**\n     * Rejects cache for an response response.\n     *\n     * Also update the waiting list for this key by rejecting it.\n     */\n    const rejectResponse = async (responseId, config) => {\n        var _a;\n        // Update the cache to empty to prevent infinite loading state\n        await axios.storage.remove(responseId, config);\n        // Reject the deferred if present\n        (_a = axios.waiting[responseId]) === null || _a === void 0 ? void 0 : _a.reject(null);\n        delete axios.waiting[responseId];\n    };\n    const onFulfilled = async (response) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        var _l;\n        const id = (response.id = (_a = (_l = response.config).id) !== null && _a !== void 0 ? _a : (_l.id = axios.generateKey(response.config)));\n        (_b = response.cached) !== null && _b !== void 0 ? _b : (response.cached = false);\n        // Response is already cached\n        if (response.cached) {\n            if (__ACI_DEV__) {\n                (_c = axios.debug) === null || _c === void 0 ? void 0 : _c.call(axios, {\n                    id,\n                    msg: 'Returned cached response'\n                });\n            }\n            return response;\n        }\n        // Skip cache: either false or weird behavior\n        // config.cache should always exists, at least from global config merge.\n        if (!response.config.cache) {\n            if (__ACI_DEV__) {\n                (_d = axios.debug) === null || _d === void 0 ? void 0 : _d.call(axios, {\n                    id,\n                    msg: 'Response with config.cache === false',\n                    data: response\n                });\n            }\n            return Object.assign(Object.assign({}, response), { cached: false });\n        }\n        // Request interceptor merges defaults with per request configuration\n        const cacheConfig = response.config.cache;\n        const config = response.config;\n        const cache = await axios.storage.get(id, config);\n        if (\n        // If the request interceptor had a problem\n        cache.state === 'stale' ||\n            cache.state === 'empty' ||\n            // Should not hit here because of previous response.cached check\n            cache.state === 'cached') {\n            if (__ACI_DEV__) {\n                (_e = axios.debug) === null || _e === void 0 ? void 0 : _e.call(axios, {\n                    id,\n                    msg: 'Response not cached but storage is not loading',\n                    data: { cache, response }\n                });\n            }\n            return response;\n        }\n        // Config told that this response should be cached.\n        if (\n        // For 'loading' values (post stale), this check was already run in the past.\n        !cache.data &&\n            !(await testCachePredicate(response, cacheConfig.cachePredicate))) {\n            await rejectResponse(id, config);\n            if (__ACI_DEV__) {\n                (_f = axios.debug) === null || _f === void 0 ? void 0 : _f.call(axios, {\n                    id,\n                    msg: 'Cache predicate rejected this response'\n                });\n            }\n            return response;\n        }\n        // avoid remnant headers from remote server to break implementation\n        for (const header in Header) {\n            if (!header.startsWith('XAxiosCache')) {\n                continue;\n            }\n            delete response.headers[header];\n        }\n        if (cacheConfig.etag && cacheConfig.etag !== true) {\n            response.headers[Header.XAxiosCacheEtag] = cacheConfig.etag;\n        }\n        if (cacheConfig.modifiedSince) {\n            response.headers[Header.XAxiosCacheLastModified] =\n                cacheConfig.modifiedSince === true\n                    ? 'use-cache-timestamp'\n                    : cacheConfig.modifiedSince.toUTCString();\n        }\n        let ttl = cacheConfig.ttl || -1; // always set from global config\n        if (cacheConfig === null || cacheConfig === void 0 ? void 0 : cacheConfig.interpretHeader) {\n            const expirationTime = axios.headerInterpreter(response.headers);\n            // Cache should not be used\n            if (expirationTime === 'dont cache') {\n                await rejectResponse(id, config);\n                if (__ACI_DEV__) {\n                    (_g = axios.debug) === null || _g === void 0 ? void 0 : _g.call(axios, {\n                        id,\n                        msg: `Cache header interpreted as 'dont cache'`,\n                        data: { cache, response, expirationTime }\n                    });\n                }\n                return response;\n            }\n            ttl = expirationTime === 'not enough headers' ? ttl : expirationTime;\n        }\n        const data = createCacheResponse(response, cache.data);\n        if (typeof ttl === 'function') {\n            ttl = await ttl(response);\n        }\n        if (cacheConfig.staleIfError) {\n            response.headers[Header.XAxiosCacheStaleIfError] = String(ttl);\n        }\n        if (__ACI_DEV__) {\n            (_h = axios.debug) === null || _h === void 0 ? void 0 : _h.call(axios, {\n                id,\n                msg: 'Useful response configuration found',\n                data: { cacheConfig, ttl, cacheResponse: data }\n            });\n        }\n        // Update other entries before updating himself\n        if (cacheConfig === null || cacheConfig === void 0 ? void 0 : cacheConfig.update) {\n            await updateCache(axios.storage, response, cacheConfig.update);\n        }\n        const newCache = {\n            state: 'cached',\n            ttl,\n            createdAt: Date.now(),\n            data\n        };\n        // Resolve all other requests waiting for this response\n        const waiting = axios.waiting[id];\n        if (waiting) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            waiting.resolve(newCache.data);\n            delete axios.waiting[id];\n            if (__ACI_DEV__) {\n                (_j = axios.debug) === null || _j === void 0 ? void 0 : _j.call(axios, {\n                    id,\n                    msg: 'Found waiting deferred(s) and resolved them'\n                });\n            }\n        }\n        // Define this key as cache on the storage\n        await axios.storage.set(id, newCache, config);\n        if (__ACI_DEV__) {\n            (_k = axios.debug) === null || _k === void 0 ? void 0 : _k.call(axios, {\n                id,\n                msg: 'Response cached',\n                data: { cache: newCache, response }\n            });\n        }\n        // Return the response with cached as false, because it was not cached at all\n        return response;\n    };\n    const onRejected = async (error) => {\n        var _a, _b, _c, _d, _e, _f;\n        const config = error.config;\n        // config.cache should always exists, at least from global config merge.\n        if (!(config === null || config === void 0 ? void 0 : config.cache) || !config.id) {\n            if (__ACI_DEV__) {\n                (_a = axios.debug) === null || _a === void 0 ? void 0 : _a.call(axios, {\n                    msg: 'Web request returned an error but cache handling is not enabled',\n                    data: { error }\n                });\n            }\n            throw error;\n        }\n        const cache = await axios.storage.get(config.id, config);\n        const cacheConfig = config.cache;\n        if (\n        // This will only not be loading if the interceptor broke\n        cache.state !== 'loading' ||\n            cache.previous !== 'stale') {\n            await rejectResponse(config.id, config);\n            if (__ACI_DEV__) {\n                (_b = axios.debug) === null || _b === void 0 ? void 0 : _b.call(axios, {\n                    msg: 'Caught an error in the request interceptor',\n                    data: { error, config }\n                });\n            }\n            throw error;\n        }\n        if (cacheConfig === null || cacheConfig === void 0 ? void 0 : cacheConfig.staleIfError) {\n            const staleIfError = typeof cacheConfig.staleIfError === 'function'\n                ? await cacheConfig.staleIfError(error.response, cache, error)\n                : cacheConfig.staleIfError;\n            if (__ACI_DEV__) {\n                (_c = axios.debug) === null || _c === void 0 ? void 0 : _c.call(axios, {\n                    msg: 'Found cache if stale config for rejected response',\n                    data: { error, config, staleIfError }\n                });\n            }\n            if (staleIfError === true ||\n                // staleIfError is the number of seconds that stale is allowed to be used\n                (typeof staleIfError === 'number' && cache.createdAt + staleIfError > Date.now())) {\n                // Resolve all other requests waiting for this response\n                (_d = axios.waiting[config.id]) === null || _d === void 0 ? void 0 : _d.resolve(cache.data);\n                delete axios.waiting[config.id];\n                // re-mark the cache as stale\n                await axios.storage.set(config.id, {\n                    state: 'stale',\n                    createdAt: Date.now(),\n                    data: cache.data\n                }, config);\n                if (__ACI_DEV__) {\n                    (_e = axios.debug) === null || _e === void 0 ? void 0 : _e.call(axios, {\n                        msg: 'staleIfError resolved this response with cached data',\n                        data: { error, config, cache }\n                    });\n                }\n                return {\n                    cached: true,\n                    config,\n                    id: config.id,\n                    data: cache.data.data,\n                    headers: cache.data.headers,\n                    status: cache.data.status,\n                    statusText: cache.data.statusText\n                };\n            }\n        }\n        if (__ACI_DEV__) {\n            (_f = axios.debug) === null || _f === void 0 ? void 0 : _f.call(axios, {\n                msg: 'Received an unknown error that could not be handled',\n                data: { error, config }\n            });\n        }\n        throw error;\n    };\n    return {\n        onFulfilled,\n        onRejected,\n        apply: () => axios.interceptors.response.use(onFulfilled, onRejected)\n    };\n}\n","import { Header } from '../header/headers';\nconst storage = Symbol();\n/** Returns true if the provided object was created from {@link buildStorage} function. */\nexport const isStorage = (obj) => !!obj && !!obj[storage];\n/** Returns true if this storage is expired, but it has sufficient properties to stale. */\nexport function canStale(value) {\n    const headers = value.data.headers;\n    return (Header.ETag in headers ||\n        Header.LastModified in headers ||\n        Header.XAxiosCacheEtag in headers ||\n        Header.XAxiosCacheStaleIfError in headers ||\n        Header.XAxiosCacheLastModified in headers);\n}\n/** Checks if the provided cache is expired. You should also check if the cache {@link canStale} */\nexport function isExpired(value) {\n    return value.createdAt + value.ttl <= Date.now();\n}\n/**\n * Builds a custom storage.\n *\n * **Note**: You can only create an custom storage with this function.\n *\n * @example\n *\n * ```js\n * const myStorage = buildStorage({\n *   find: () => {...},\n *   set: () => {...},\n *   remove: () => {...}\n * });\n *\n * const axios = setupCache(axios, { storage: myStorage });\n * ```\n */\nexport function buildStorage({ set, find, remove }) {\n    return {\n        //@ts-expect-error - we don't want to expose this\n        [storage]: 1,\n        set,\n        remove,\n        get: async (key, config) => {\n            const value = await find(key, config);\n            if (!value) {\n                return { state: 'empty' };\n            }\n            if (\n            // Not cached or fresh value\n            value.state !== 'cached' ||\n                !isExpired(value)) {\n                return value;\n            }\n            if (canStale(value)) {\n                const stale = {\n                    state: 'stale',\n                    createdAt: value.createdAt,\n                    data: value.data\n                };\n                await set(key, stale, config);\n                return stale;\n            }\n            await remove(key, config);\n            return { state: 'empty' };\n        }\n    };\n}\n","import { buildStorage } from './build';\n/**\n * Creates a simple in-memory storage. This means that if you need to persist data between\n * page or server reloads, this will not help.\n *\n * This is the storage used by default.\n *\n * If you need to modify it's data, you can do by the `data` property.\n *\n * @example\n *\n * ```js\n * const memoryStorage = buildMemoryStorage();\n *\n * setupCache(axios, { storage: memoryStorage });\n *\n * // Simple example to force delete the request cache\n *\n * const { id } = axios.get('url');\n *\n * delete memoryStorage.data[id];\n * ```\n *\n * @param {boolean} cloneData If the data returned by `find()` should be cloned to avoid\n *   mutating the original data outside the `set()` method.\n */\nexport function buildMemoryStorage(cloneData = false) {\n    const storage = buildStorage({\n        set: (key, value) => {\n            storage.data[key] = value;\n        },\n        remove: (key) => {\n            delete storage.data[key];\n        },\n        find: (key) => {\n            const value = storage.data[key];\n            if (cloneData && value !== undefined) {\n                /* istanbul ignore if 'only available on super recent browsers' */\n                if (typeof structuredClone === 'function') {\n                    return structuredClone(value);\n                }\n                return JSON.parse(JSON.stringify(value));\n            }\n            return value;\n        }\n    });\n    storage.data = Object.create(null);\n    return storage;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"object-code\");","import { hash } from 'object-code';\n// Remove first and last '/' char, if present\nconst SLASHES_REGEX = /^\\/|\\/$/g;\n/**\n * Builds an generator that receives a {@link CacheRequestConfig} and returns a value\n * hashed by {@link hash}.\n *\n * The value is hashed into a signed integer when the returned value from the provided\n * generator is not a `string` or a `number`.\n *\n * You can return any type of data structure.\n *\n * @example\n *\n * ```js\n * // This generator will return a hash code.\n * // The code will only be the same if url, method and data are the same.\n * const generator = buildKeyGenerator(({ url, method, data }) => ({\n *   url,\n *   method,\n *   data\n * }));\n * ```\n */\nexport function buildKeyGenerator(generator) {\n    return (request) => {\n        if (request.id) {\n            return request.id;\n        }\n        const key = generator(request);\n        if (typeof key === 'string' || typeof key === 'number') {\n            return `${key}`;\n        }\n        return `${hash(key)}`;\n    };\n}\nexport const defaultKeyGenerator = buildKeyGenerator(({ baseURL = '', url = '', method = 'get', params, data }) => {\n    // Remove trailing slashes to avoid generating different keys for the \"same\" final url.\n    baseURL && (baseURL = baseURL.replace(SLASHES_REGEX, ''));\n    url && (url = url.replace(SLASHES_REGEX, ''));\n    // lowercase method\n    method && (method = method.toLowerCase());\n    return {\n        url: baseURL + (baseURL && url ? '/' : '') + url,\n        params: params,\n        method,\n        data\n    };\n});\n","import { defaultHeaderInterpreter } from '../header/interpreter';\nimport { defaultRequestInterceptor } from '../interceptors/request';\nimport { defaultResponseInterceptor } from '../interceptors/response';\nimport { isStorage } from '../storage/build';\nimport { buildMemoryStorage } from '../storage/memory';\nimport { defaultKeyGenerator } from '../util/key-generator';\n/**\n * Apply the caching interceptors for a already created axios instance.\n *\n * @example\n *\n * ```ts\n * import Axios from 'axios';\n * import { setupCache, AxiosCacheInstance } from 'axios-cache-interceptor';\n *\n * // instance will have our custom typings from the return of this function\n * const instance = setupCache(\n *   Axios.create({\n *     // Axios options\n *   }),\n *   {\n *     // Axios-cache-interceptor options\n *   }\n * );\n *\n * // OR\n *\n * const instance = axios.create({\n *   // Axios options\n * }) as AxiosCacheInstance;\n *\n * // As this functions returns the same axios instance but only with\n * // different typings, you can ignore the function return.\n * setupCache(instance, {\n *   // Axios-cache-interceptor options\n * });\n * ```\n *\n * @param axios The already created axios instance\n * @param config The config for the caching interceptors\n * @returns The same instance with extended typescript types.\n */\nexport function setupCache(axios, options = {}) {\n    var _a, _b, _c, _d, _e;\n    const axiosCache = axios;\n    axiosCache.storage = options.storage || buildMemoryStorage();\n    if (!isStorage(axiosCache.storage)) {\n        throw new Error('Use buildStorage() function');\n    }\n    axiosCache.waiting = options.waiting || {};\n    axiosCache.generateKey = options.generateKey || defaultKeyGenerator;\n    axiosCache.headerInterpreter = options.headerInterpreter || defaultHeaderInterpreter;\n    axiosCache.requestInterceptor =\n        options.requestInterceptor || defaultRequestInterceptor(axiosCache);\n    axiosCache.responseInterceptor =\n        options.responseInterceptor || defaultResponseInterceptor(axiosCache);\n    axiosCache.debug = options.debug;\n    // CacheRequestConfig values\n    axiosCache.defaults.cache = {\n        update: options.update || {},\n        ttl: (_a = options.ttl) !== null && _a !== void 0 ? _a : 1000 * 60 * 5,\n        methods: options.methods || ['get'],\n        cachePredicate: options.cachePredicate || {\n            statusCheck: (status) => status >= 200 && status < 400\n        },\n        etag: (_b = options.etag) !== null && _b !== void 0 ? _b : true,\n        // This option is going to be ignored by servers when ETag is enabled\n        // Checks strict equality to false to avoid undefined-ish values\n        modifiedSince: (_c = options.modifiedSince) !== null && _c !== void 0 ? _c : options.etag === false,\n        interpretHeader: (_d = options.interpretHeader) !== null && _d !== void 0 ? _d : true,\n        staleIfError: (_e = options.staleIfError) !== null && _e !== void 0 ? _e : true\n    };\n    // Apply interceptors\n    axiosCache.requestInterceptor.apply();\n    axiosCache.responseInterceptor.apply();\n    return axiosCache;\n}\n","import { buildStorage, canStale, isExpired } from './build';\n/**\n * Creates a simple storage. You can persist his data by using `sessionStorage` or\n * `localStorage` with it.\n *\n * **ImplNote**: Without polyfill, this storage only works on browser environments.\n *\n * @example\n *\n * ```js\n * const fromLocalStorage = buildWebStorage(localStorage);\n * const fromSessionStorage = buildWebStorage(sessionStorage);\n *\n * const myStorage = new Storage();\n * const fromMyStorage = buildWebStorage(myStorage);\n * ```\n *\n * @param storage The type of web storage to use. localStorage or sessionStorage.\n * @param prefix The prefix to index the storage. Useful to prevent collision between\n *   multiple places using the same storage.\n */\nexport function buildWebStorage(storage, prefix = '') {\n    return buildStorage({\n        find: (key) => {\n            const json = storage.getItem(prefix + key);\n            return json ? JSON.parse(json) : undefined;\n        },\n        remove: (key) => {\n            storage.removeItem(prefix + key);\n        },\n        set: (key, value) => {\n            const save = () => storage.setItem(prefix + key, JSON.stringify(value));\n            try {\n                return save();\n            }\n            catch (error) {\n                const allValues = Object.entries(storage)\n                    .filter(([key]) => key.startsWith(prefix) && storage.getItem(key))\n                    .map(([key, val]) => [key, JSON.parse(val)]);\n                // Remove all expired values\n                for (const [prefixedKey, value] of allValues) {\n                    if (value.state === 'cached' && isExpired(value) && !canStale(value)) {\n                        storage.removeItem(prefixedKey);\n                    }\n                }\n                // Try save again after removing expired values\n                try {\n                    return save();\n                }\n                catch (_) {\n                    // Storage still full, try removing the oldest value until it can be saved\n                    // Descending sort by createdAt\n                    const sortedItems = allValues.sort(([, valueA], [, valueB]) => (valueA.createdAt || 0) - (valueB.createdAt || 0));\n                    for (const [prefixedKey] of sortedItems) {\n                        storage.removeItem(prefixedKey);\n                        try {\n                            return save();\n                        }\n                        catch (_) {\n                            // This key didn't free all the required space\n                        }\n                    }\n                }\n                // Clear the cache for the specified key\n                storage.removeItem(prefix + key);\n            }\n        }\n    });\n}\n","export * from './cache/axios';\nexport * from './cache/cache';\nexport * from './cache/create';\nexport * from './header/headers';\nexport * from './header/interpreter';\nexport * from './header/types';\nexport * from './interceptors/build';\nexport * from './interceptors/request';\nexport * from './interceptors/response';\nexport * from './interceptors/util';\nexport * from './storage/build';\nexport * from './storage/memory';\nexport * from './storage/types';\nexport * from './storage/web-api';\nexport * from './util/cache-predicate';\nexport * from './util/key-generator';\nexport * from './util/types';\nexport * from './util/update-cache';\nif (__ACI_DEV__) {\n    console.error('You are using a development build. Make sure to use the correct build in production\\nhttps://axios-cache-interceptor.js.org/#/pages/installing\\n\\n');\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","Header","freeze","IfModifiedSince","LastModified","IfNoneMatch","CacheControl","ETag","Expires","Age","XAxiosCacheEtag","XAxiosCacheLastModified","XAxiosCacheStaleIfError","defaultHeaderInterpreter","headers","cacheControl","noCache","noStore","mustRevalidate","maxAge","immutable","parse","String","age","Number","expires","milliseconds","Date","now","createValidateStatus","oldValidate","status","isMethodIn","requestMethod","methodList","toLowerCase","method","updateStaleRequest","cache","config","_a","etag","modifiedSince","etagValue","data","createdAt","toUTCString","createCacheResponse","response","cached","statusText","assign","defaultRequestInterceptor","axios","onFulfilled","async","_b","_c","_d","_e","_f","_g","_h","_j","debug","msg","defaults","methods","id","generateKey","cachedResponse","storage","emptyOrStale","state","waiting","deferred","catch","set","previous","validateStatus","remove","err","adapter","Promise","resolve","apply","interceptors","request","use","testCachePredicate","predicate","statusCheck","responseMatch","containsHeaders","header","updateCache","entries","cacheKey","updater","newValue","defaultResponseInterceptor","rejectResponse","responseId","reject","_k","_l","cacheConfig","cachePredicate","startsWith","ttl","interpretHeader","expirationTime","headerInterpreter","staleIfError","cacheResponse","update","newCache","onRejected","error","isStorage","canStale","isExpired","buildStorage","find","stale","buildMemoryStorage","cloneData","undefined","structuredClone","JSON","stringify","create","SLASHES_REGEX","buildKeyGenerator","generator","hash","defaultKeyGenerator","baseURL","url","params","replace","setupCache","options","axiosCache","Error","requestInterceptor","responseInterceptor","buildWebStorage","prefix","json","getItem","removeItem","save","setItem","allValues","filter","map","val","prefixedKey","_","sortedItems","sort","valueA","valueB","console"],"sourceRoot":""}